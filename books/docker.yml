---

- name: Prepare VMs for Docker installation
  hosts: docker
  become: true
  become_method: ansible.builtin.sudo
  pre_tasks:

    - name: Remove old versions of Docker
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - podman-docker
          - containerd
          - runc
        state: absent

    - name: Check if needed packages are installed
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg2
        state: present

    - name: Set permissions for keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Touch Docker GPG key file
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.asc
        state: touch
        mode: a+r
      changed_when: false

- name: Install Docker to VMs
  hosts: docker
  become: true
  become_method: ansible.builtin.sudo
  vars:
    docker_keyfile: /etc/apt/keyrings/docker.asc
    cpu_arch: amd64
    debian_release: bookworm
  tasks:

    - name: Download official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        keyring: "{{ docker_keyfile }}"
        state: present

    - name: Add apt repository
      ansible.builtin.apt_repository:
        repo: >
          deb [arch={{ cpu_arch }} signed-by={{ docker_keyfile }}]
          https://download.docker.com/linux/debian
          {{ debian_release }} stable
        filename: docker
        state: present

    - name: Install Docker packages
      ansible.builtin.apt:
        update_cache: true
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

- name: Manage Docker users
  hosts: docker
  become: true
  become_method: ansible.builtin.sudo
  vars:
    docker_user: "{{ ansible_user }}"
  tasks:

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ docker_user }}"
        groups: docker
        append: true
      when: docker_user is defined and docker_user != ""
